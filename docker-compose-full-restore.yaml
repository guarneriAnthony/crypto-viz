version: '3.8'

services:
  # Infrastructure déjà restaurée - on la garde
  minio:
    image: minio/minio:RELEASE.2024-01-16T16-07-38Z
    container_name: crypto_minio_restored
    command: server /data --console-address ":9001"
    ports:
      - "9002:9000"
      - "9001:9001" 
    environment:
      - MINIO_ROOT_USER=cryptoviz
      - MINIO_ROOT_PASSWORD=cryptoviz2024
    volumes:
      - ./minio-data:/data
    networks:
      - crypto-net
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: crypto_redis_restored
    ports:
      - "6379:6379"
    networks:
      - crypto-net
    restart: unless-stopped

  redpanda:
    image: redpandadata/redpanda:v23.3.3
    container_name: crypto_redpanda_restored
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://192.168.1.76:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://192.168.1.76:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
    ports:
      - "18081:18081"
      - "18082:18082" 
      - "19092:9092"
      - "9644:9644"
    networks:
      - crypto-net
    restart: unless-stopped

  redpanda-ui:
    image: redpandadata/console:v2.4.1
    container_name: crypto_redpanda_ui_restored
    ports:
      - "8090:8080"
    environment:
      - KAFKA_BROKERS=redpanda:9092
    depends_on:
      - redpanda
    networks:
      - crypto-net
    restart: unless-stopped

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: crypto_spark_master_restored
    ports:
      - "8082:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    networks:
      - crypto-net
    restart: unless-stopped

  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: crypto_spark_worker_restored
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - crypto-net
    restart: unless-stopped

  # APPLICATIONS MÉTIER À RESTAURER
  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile
    container_name: crypto_scraper_restored
    environment:
      - COINMARKETCAP_API_KEY=${COINMARKETCAP_API_KEY:-demo}
      - REDPANDA_BROKERS=redpanda:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redpanda
      - redis
    networks:
      - crypto-net
    restart: unless-stopped

  spark-streaming:
    build:
      context: ./spark-consumer
      dockerfile: Dockerfile
    container_name: crypto_spark_streaming_restored
    environment:
      - SPARK_MASTER_URL=spark://spark-master:7077
      - KAFKA_BROKERS=redpanda:9092
      - MINIO_ENDPOINT=192.168.1.76:9002
      - MINIO_ACCESS_KEY=cryptoviz
      - MINIO_SECRET_KEY=cryptoviz2024
      - MINIO_BUCKET=crypto-data-partitioned
    depends_on:
      - spark-master
      - redpanda
      - minio
    networks:
      - crypto-net
    restart: unless-stopped

networks:
  crypto-net:
    driver: bridge
