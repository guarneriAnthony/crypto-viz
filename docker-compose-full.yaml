version: '3.8'

services:
  # MinIO - Stockage
  minio:
    image: minio/minio:latest
    container_name: crypto_minio
    ports:
      - "9002:9000"
      - "9003:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
    networks:
      - crypto-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: crypto_redis
    ports:
      - "6379:6379"
    networks:
      - crypto-network

  # Redpanda (Kafka)
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.8
    container_name: crypto_redpanda
    ports:
      - "19092:9092"
      - "18081:8081"
      - "18082:8082"
      - "9644:9644"
    command:
      - redpanda
      - start
      - --smp 1
      - --memory 1G
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:19092
    networks:
      - crypto-network

  # Redpanda Console UI
  redpanda-console:
    image: redpandadata/console:latest
    container_name: crypto_redpanda_ui
    ports:
      - "8090:8080"
    environment:
      - KAFKA_BROKERS=redpanda:29092
    depends_on:
      - redpanda
    networks:
      - crypto-network

  # Spark Master
  spark-master:
    image: bitnami/spark:latest
    container_name: crypto_spark_master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    networks:
      - crypto-network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:latest
    container_name: crypto_spark_worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - crypto-network

networks:
  crypto-network:
    driver: bridge
