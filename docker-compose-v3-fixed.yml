services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.8
    container_name: crypto_redpanda
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://192.168.1.76:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://192.168.1.76:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=info
    ports:
      - "19092:19092" # Kafka API
      - "18081:18081" # Schema Registry
      - "18082:18082" # HTTP Proxy
      - "9644:9644"   # Admin API
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    networks:
      - crypto-net
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  # Console Web UI pour Redpanda (optionnel mais trÃ¨s utile)
  console:
    image: docker.redpanda.com/redpandadata/console:v2.3.1
    container_name: crypto_redpanda_console
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: false
    ports:
      - "8090:8080"
    networks:
      - crypto-net
    depends_on:
      redpanda:
        condition: service_healthy

  scraper:
    build: ./scraper
    container_name: crypto_scraper
    depends_on:
      redpanda:
        condition: service_healthy
    environment:
      - COINMARKETCAP_API_KEY=f6f6031f-2dd6-45c4-8b98-2df503c0efb2
      - REDPANDA_BROKERS=redpanda:9092
    networks:
      - crypto-net

  consumer:
    build: ./consumer
    container_name: crypto_consumer
    depends_on:
      redpanda:
        condition: service_healthy
    volumes:
      - ./data:/data
    environment:
      - REDPANDA_BROKERS=redpanda:9092
    networks:
      - crypto-net

  dashboard:
    build: ./dashboard
    container_name: crypto_dashboard
    ports:
      - "8501:8501"
    depends_on:
      - consumer
    volumes:
      - ./data:/data
    networks:
      - crypto-net

  streaming_server:
    build: ./streaming_server
    container_name: crypto_streaming
    ports:
      - "5000:5000"
    depends_on:
      redpanda:
        condition: service_healthy
    environment:
      - REDPANDA_BROKERS=redpanda:9092
    networks:
      - crypto-net
    restart: unless-stopped

volumes:
  redpanda_data:

networks:
  crypto-net:
    driver: bridge
