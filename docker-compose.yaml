version: '3.8'

services:
  minio:
    image: minio/minio:latest
    container_name: minio-crypto
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
    networks:
      - crypto-network

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master-crypto
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    networks:
      - crypto-network

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker-crypto
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - crypto-network

  crypto-dashboard-modern:
    build: 
      context: ./dashboard-panel
      dockerfile: Dockerfile
    container_name: crypto-dashboard-modern
    ports:
      - "5006:5006"
    depends_on:
      - minio
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=crypto-data-partitioned
      - PYTHONPATH=/app
      - PANEL_ALLOW_WEBSOCKET_ORIGIN=*
      - BOKEH_ALLOW_WEBSOCKET_ORIGIN=*
    networks:
      - crypto-network
    restart: unless-stopped

networks:
  crypto-network:
    driver: bridge
